version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
        environment:
          - "discovery.type=single-node"
          - "cluster.name=datashare"
          - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
        name: elasticsearch
      - image: redis:4.0.1-alpine
        name: redis

    working_directory: ~/app

    environment:
      MAVEN_OPTS: "-Xms256m -Xmx256m"

    dependencies:
      override:

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn validate

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: mvn test

      - run: mvn -Dmaven.test.skip=true package

      - run:
           name: set version variable
           command: export DS_VERSION=$(cat pom.xml | grep '<version>[0-9.]\+' | sed 's/<version>\([0-9.]\+\)<\/version>/\1/g' | tr -d '[:space:]')

      - store_artifacts:
          path: ~/app/datashare/datashare-dist/target/datashare-dist-${DS_VERSION}-all

  build_front:
    docker:
      - image: circleci/node:8.9.4
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
        environment:
          - "discovery.type=single-node"
          - "cluster.name=datashare"
          - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
        name: elasticsearch
    working_directory: ~/app
    steps:
      - run:
           name: adds_ssh_dir
           command: |
             mkdir -p ~/.ssh
             chmod 700 ~/.ssh
      - add_ssh_keys:
          fingerprints:
            - "b3:e6:7c:f3:86:9e:e9:88:d1:cf:22:8c:97:3e:93:54"
      - run:
          name: checkout
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone git@github.com:ICIJ/datashare-client.git
      - run:
          name: update npm
          command: 'sudo npm install -g npm@latest yarn@latest'
      - run:
          name: make install
          command: |
            cd ~/app/datashare-client
            make install
      - save_cache:
          key: dependency-cache-{{ checksum "~/app/datashare-client/package.json" }}
          paths:
            - ~/app/datashare-client/node_modules
      - run:
          name: run tests and build dist
          command: |
            cd ~/app/datashare-client
            make unit dist
      - store_artifacts:
          path: ~/app/datashare-client/dist

workflows:
  version: 2
  tagged_build:
    jobs:
      - build
      - build_front:
          requires:
            - build

#workflows:
#  version: 2
#    un-tagged-build:
#      jobs:
#        - build:
#          filters:
#            tags:
#              ignore: /^[0-9.]*/
#    tagged_build:
#      jobs:
#        - build:
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#             only: /^[0-9.]*/
#       - build_front:
#         requires:
#           - build